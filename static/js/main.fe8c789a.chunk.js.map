{"version":3,"sources":["components/StarRating.js","components/DisplayCard.js","images/post.jpg","components/RenderCells.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["StarRating","rating","className","Array","map","star","i","ratingValue","DisplayCard","displayCard","setDisplayCard","data","close","onClick","aria-hidden","RenderCells","currentMonth","setCurrentMonth","monthStart","startOfMonth","monthEnd","endOfMonth","startDate","startOfWeek","endDate","endOfWeek","rows","days","day","formattedDate","format","foundPost","find","post","Date","calendardatetime","push","src","images","imageurl","alt","addDays","Calendar","useState","setData","renderHeader","month","renderDays","useEffect","fetch","proxyURl","method","headers","body","JSON","stringify","requestObject","then","res","json","responseobjects","posts","onScroll","event","target","scrollTop","scrollHeight","clientHeight","addMonths","subMonths","style","overflowY","height","isOpen","onDismiss","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe8c789a.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nexport default function StarRating({ rating }) {\n  return (\n    <div className=\"flex\">\n      {[...Array(5)].map((star, i) => {\n        let ratingValue = i + 1;\n        return (\n          <FaStar\n            className={`${\n              ratingValue <= rating ? \"text-blue-400\" : \"text-gray-300\"\n            }`}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport default function DisplayCard({\n  displayCard,\n  setDisplayCard,\n  data,\n  close,\n}) {\n  return (\n    <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n      <button onClick={close}>\n        <VisuallyHidden>Close</VisuallyHidden>\n        <span aria-hidden>Ã—</span>\n      </button>\n      <div>\n        <h1>display card</h1>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/post.85fdb123.jpg\";","import React from \"react\";\nimport {\n  startOfWeek,\n  endOfWeek,\n  addDays,\n  startOfMonth,\n  endOfMonth,\n  format,\n} from \"date-fns\";\nimport StarRating from \"./StarRating\";\nimport CardDisplay from \"./DisplayCard\";\nimport postImage from \"../images/post.jpg\";\n\nexport default function RenderCells({\n  currentMonth,\n  setCurrentMonth,\n  data,\n  setDisplayCard,\n}) {\n  const monthStart = startOfMonth(currentMonth);\n  const monthEnd = endOfMonth(monthStart);\n  const startDate = startOfWeek(monthStart);\n  const endDate = endOfWeek(monthEnd);\n\n  const dateFormat = \"d\";\n  const rows = [];\n  let days = [];\n  let day = startDate;\n  let formattedDate = \"\";\n\n  while (day <= endDate) {\n    for (let i = 0; i < 7; i++) {\n      formattedDate = format(day, dateFormat);\n      let dateCheck = \"yyyy-MM-dd\";\n      let fdate = format(day, dateCheck);\n\n      const foundPost =\n        data &&\n        data.find((post) => {\n          return (\n            format(new Date(post.calendardatetime), \"dd-MM-yyyy\") ===\n            format(day, \"dd-MM-yyyy\")\n          );\n        });\n      days.push(\n        <div className=\"col cell pt-1.5 \" key={day}>\n          {foundPost ? (\n            <div onClick={() => handleDisplayCard(foundPost)}>\n              <div className=\"flex justify-between px-1 \">\n                <StarRating rating={foundPost && foundPost.rating} />\n                <div className=\"font-bold\">{formattedDate}</div>\n              </div>\n              <img\n                className=\"h-24\"\n                src={foundPost.images[0].imageurl}\n                alt=\"postedImage\"\n              />\n              <div className=\"flex justify-between px-1 py-1.5\">\n                <div className=\"bg-red-100 py-1 px-1.5 rounded-2xl \">\n                  <p className=\"text-xs\">W</p>\n                </div>\n                <div className=\"bg-red-100 py-1 px-1.5 rounded-2xl \">\n                  <p className=\"text-xs\">Dc</p>\n                </div>\n                <div className=\"bg-red-100 py-1 px-1.5 rounded-2xl \">\n                  <p className=\"text-xs\">Pr</p>\n                </div>\n                <div className=\"bg-red-100 py-1 px-1.5 rounded-2xl \">\n                  <p className=\"text-xs\">C</p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"font-bold flex justify-center\">{formattedDate}</div>\n          )}\n        </div>\n      );\n      day = addDays(day, 1);\n    }\n    function handleDisplayCard(post) {\n      setDisplayCard(post);\n    }\n    rows.push(\n      <div className=\"row\" key={day}>\n        {days}\n      </div>\n    );\n    days = [];\n  }\n  return <div className=\"body\">{rows}</div>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  startOfWeek,\n  addMonths,\n  subMonths,\n  addDays,\n  format,\n  sub,\n} from \"date-fns\";\nimport RenderCells from \"./RenderCells\";\nimport requestObject from \"../requestObject.json\";\nimport DisplayCard from \"./DisplayCard\";\nimport Dialog from \"@reach/dialog\";\n\nfunction Calendar() {\n  let [currentMonth, setCurrentMonth] = useState(new Date());\n  let [displayCard, setDisplayCard] = useState(null);\n  // console.log(displayCard, \"find if post is there \");\n  let [data, setData] = useState(false);\n  const close = () => setDisplayCard(null);\n\n  useEffect(() => {\n    const url = \"http://quinncareapi-dev.us-east-2.elasticbeanstalk.com/graph\";\n    const proxyURl = \"https://cors-anywhere.herokuapp.com/\";\n\n    fetch(proxyURl + url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(requestObject),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data.responseobjects[0].posts);\n      });\n  }, []);\n\n  function renderHeader(month) {\n    const dateFormat = \"MMMM-yyyy\";\n    return (\n      <div className=\"header row flex-middle\">\n        {/* <div className=\"col col-start\" onClick={prevMonth}>\n          <div className=\"icon\">chevron_left</div>\n        </div> */}\n        <div className=\"col col-center\">\n          <span>{format(month, dateFormat)}</span>\n        </div>\n        {/* <div className=\"col col-end\" onClick={nextMonth}>\n          <div className=\"icon\">chevron_right</div>\n        </div> */}\n      </div>\n    );\n  }\n\n  function renderDays(month) {\n    const dateFormat = \"iii\";\n    const days = [];\n    let startDate = startOfWeek(month);\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center\" key={i}>\n          {format(addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n    return <div className=\"days row\">{days}</div>;\n  }\n\n  let nextMonth = () => {\n    setCurrentMonth(addMonths(currentMonth, 1));\n  };\n  let prevMonth = () => {\n    setCurrentMonth(subMonths(currentMonth, 1));\n  };\n\n  const handleScroll = (event) => {\n    if (event.target.scrollTop === 0) {\n      setCurrentMonth(subMonths(currentMonth, 1));\n\n      return;\n    }\n\n    if (\n      event.target.scrollHeight - event.target.scrollTop ===\n      event.target.clientHeight\n    ) {\n      setCurrentMonth(addMonths(currentMonth, 1));\n    }\n  };\n\n  return (\n    <div\n      onScroll={handleScroll}\n      style={{ overflowY: \"scroll\", height: \"100vh\" }}\n    >\n      {[\n        subMonths(currentMonth, 1),\n        currentMonth,\n        addMonths(currentMonth, 1),\n      ].map((month) => {\n        return (\n          <div className=\"calendar\">\n            {renderHeader(month)}\n            {renderDays(month)}\n            <RenderCells\n              currentMonth={month}\n              setCurrentMonth={setCurrentMonth}\n              data={data}\n              setDisplayCard={setDisplayCard}\n            />\n\n            <Dialog isOpen={!!displayCard} onDismiss={close} className=\"modal\">\n              <DisplayCard\n                displayCard={displayCard}\n                setDisplayCard={setDisplayCard}\n                data={data}\n                close={close}\n              />\n            </Dialog>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Calendar;\n","import \"./App.css\";\nimport Calendar from \"./components/Calendar\";\nfunction App() {\n  return (\n    <div>\n      <main>\n        <Calendar />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}